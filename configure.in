dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(gtk-gnutella, 0.90)
AM_MAINTAINER_MODE
AM_CONFIG_HEADER(config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_PROG_YACC

dnl ---------------------------------------------------------------------------
dnl Check configure command line options
dnl ---------------------------------------------------------------------------

AC_ARG_ENABLE(no-rfc1918,[
gtk-gnutella options:
  --enable-no-rfc1918             avoid RFC1918 networks (default=off)], , enable_no_rfc1918=no)
AC_ARG_ENABLE(xml-store,[
  --enable-xml-store              save searches and filters in XML (default=on)], , enable_xml_store=yes)
AC_ARG_ENABLE(gtk2,[
  --enable-gtk2                   build a gtk2 version (default=off)], , enable_gtk2=no)


if  test "x$enable_gtk2" = "xno"
then
    AM_PATH_GTK(1.2.0, ,
	AC_MSG_ERROR(Cannot find GTK: Is gtk-config in path?))

    AM_PATH_GLIB(1.2.10, ,
			AC_MSG_ERROR(Cannot find GLib: Is glib-config in path?))
    frontend="Gtk 1.2"
else
    echo -e "\n\n"
    echo "The GTK2 version of gtk-gnutells is currently not maintained and"
    echo "does not compile. It's probably coming back some day, but we can't"
    echo "give you any date."
    echo -e "\n\n"
    exit 0

    PKG_CHECK_MODULES(GTK_GNUTELLA, gtk+-2.0 >= 2.0.0 glib-2.0 >= 2.0.0)
    AC_SUBST(GTK_GNUTELLA_CFLAGS)
    AC_DEFINE(USE_GTK2)
    
    frontent="Gtk 2.0"
fi
AM_CONDITIONAL(ENABLE_GTK2, test "x$enable_gtk2" = "xyes")


dnl Check whether libresolv is needed for inet_aton()
need_lresolv=yes
AC_MSG_CHECKING(whether inet_aton needs libresolv)
AC_TRY_LINK_FUNC(inet_aton, need_lresolv=no, LIBS="$LIBS -lresolv")
AC_MSG_RESULT($need_lresolv)



dnl Set PACKAGE_DATA_DIR in config.h.
if test "x${datadir}" = 'x${prefix}/share'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${ac_default_prefix}/share/${PACKAGE}")
  else
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}")
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${datadir}/${PACKAGE}")
fi



dnl Set PACKAGE_SOURCE_DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}")

AC_MSG_CHECKING([whether to enable RFC1918 network avoidance mode])
if test "x$enable_no_rfc1918" = "xno"
then
	AC_MSG_RESULT([no])
else
	CFLAGS="$CFLAGS -DNO_RFC1918"
	AC_MSG_RESULT([yes])
fi



dnl Check for XML support
AC_PATH_PROG(XML_CONFIG,xml2-config,no)
if test "x$XML_CONFIG" != "xno"; then
    AC_MSG_CHECKING([whether to enable XML persistance backend])
    if test "x$enable_xml_store" = "xno"
    then
    	AC_MSG_RESULT([no])
    else
        AC_MSG_RESULT([yes])
        AC_MSG_CHECKING(libxml2 version)
        libxml2_version=`$XML_CONFIG --version | awk '{print $1;}'`
        AC_MSG_RESULT($libxml2_version)
        libxml2_version=`echo $libxml2_version | awk -F. '{print $1 * 10000 + $2 * 100 + $3;}'`
        if test 0$libxml2_version -lt 20419; then
            AC_MSG_ERROR(libxml2 2.4.19 or later required)
        fi
        XML_LIBS=`$XML_CONFIG --libs`
        XML_CFLAGS=`$XML_CONFIG --cflags`
        AC_SUBST(XML_LIBS)
        AC_SUBST(XML_CFLAGS)
        LIBXML2_REQUIRED=2.4.19
        AC_SUBST(LIBXML2_REQUIRED)
        AC_DEFINE(USE_SEARCH_XML)
    fi
else
    AC_MSG_CHECKING([whether to enable XML persistance backend])
   	AC_MSG_RESULT([no])
    enable_xml_store="no"
fi
AM_CONDITIONAL(ENABLE_XML_STORE, test "x$enable_xml_store" = "xyes")


dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

AC_CHECK_FUNCS(herror inet_aton)
AC_CHECK_FUNCS(strcasestr)

dnl Checks for sys/sendfile.h
AC_CHECK_HEADER(sys/sendfile.h, [have_sendfile_h=yes], [have_sendfile_h=no])
if test "$have_sendfile_h" = yes; then
    AC_DEFINE(HAVE_SENDFILE_H)
fi

dnl Checks for ctype.h
AC_CHECK_HEADER(ctype.h, [have_ctype_h=yes], [have_ctype_h=no])
if test "$have_ctype_h" = yes; then
    AC_DEFINE(HAVE_CTYPE_H)
fi

dnl Checks for zlib.h
AC_CHECK_HEADER(zlib.h, [have_zlib_h=yes], [have_zlib_h=no])
if test "$have_zlib_h" = no; then
    echo "Missing zlib.h -- you need to install zlib from www.zlib.org"
fi

AC_OUTPUT([
Makefile
src/Makefile
gtk-gnutella.spec
])

echo -e "\n\nFeature summary:\n---------------\n"
echo -e "Frontend                 :   $frontend"
echo -n "Persistant filters       :   "
if test "x$enable_xml_store" = "xno" ; then
    if test "x$XML_CONFIG" = "xno" ; then
        echo "no (libxml2 missing)"
	echo "NOTE: filters will not be persisted. You should seriously consider"
	echo "      installing libxml2 as the filters are a central element of"
	echo "      gtk-gnutella and you WILL want that they are kept across"
	echo "      sessions. If your distribution does not have a libxml2"
	echo "      development package, you can get the sources here:"
	echo "      http://www.libxml.org"
    else
	echo "no (you must know)"
    fi
else
    echo "yes"
fi	

echo -n "RFC1918 avoidance        :   "
if test "x$enable_no_rfc1918" = "xno" ; then
    echo "no"
else
    echo "yes"
fi

echo -n "gNet traffic compression :   "
if test "$have_zlib_h" = no ; then
    echo "no (you need to install zlib from www.zlib.org)"
else
    echo "yes"
fi

echo -e "\n\n"

    
